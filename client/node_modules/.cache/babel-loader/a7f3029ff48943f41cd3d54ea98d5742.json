{"ast":null,"code":"var _jsxFileName = \"/Users/daria/Desktop/ALL/Spring_2021/550/Project/CIS550-Final-Project/client/src/components/Nutrition.js\";\nimport React, { Component, Chart } from 'react';\nimport { MapContainer, CircleMarker, TileLayer, Tooltip } from \"react-leaflet\";\nimport { PieChart } from 'react-minimal-pie-chart';\n\nfunction round(value, decimals) {\n  return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);\n}\n\n;\nexport default class Nutrition extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countries: [],\n      selectedCountry: \"\",\n      chart: \"\",\n      options: \"\",\n      stats: \"\"\n    };\n    this.submitCountryChange = this.submitCountryChange.bind(this);\n    this.handleCountryChange = this.handleCountryChange.bind(this); // this.handleGenreChange = this.handleGenreChange.bind(this);\n  }\n\n  /* ---- Q3a (Best Movies) ---- */\n  componentDidMount() {\n    //fetch the weeks options\n    fetch(\"http://localhost:8081/nutrition\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(countryList => {\n      if (!countryList) return;\n      const countryDivs = countryList.map((countryObj, i) => /*#__PURE__*/React.createElement(\"option\", {\n        key: i,\n        className: \"countryOption\",\n        value: countryObj.Country,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 5\n        }\n      }, countryObj.Country)); //   console.log(decadesDivs);\n      //    console.log(decadesList);\n\n      this.setState({\n        countries: countryDivs,\n        selectedCountry: countryDivs[0].props.value\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  handleCountryChange(e) {\n    let tmp = e.target.value;\n    this.setState({\n      selectedCountry: tmp\n    });\n  }\n\n  async submitCountryChange(e) {\n    fetch(\"http://localhost:8081/byCountry/\" + this.state.selectedCountry, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(nutr => {\n      if (!nutr) return;\n      const pieChart = nutr.map((nutrObj, i) => /*#__PURE__*/React.createElement(PieChart // labelPosition=\"25%\"\n      , {\n        label: x => {\n          return x.dataEntry.title;\n        },\n        labelStyle: {\n          color: \"white\",\n          fontSize: \"2px\",\n          fill: \"white\"\n        },\n        labelPosition: \"105\",\n        radius: \"25\",\n        background: \"#FFF0F5\",\n        data: [{\n          title: 'Alcoholic Beverages, ' + round(nutrObj.Alcoholic_Beverages / (nutrObj.Alcoholic_Beverages + nutrObj.Animal_fats + nutrObj.Animal_Products + nutrObj.Cereals + nutrObj.Fish_Seafood + nutrObj.Fruits + nutrObj.Milk + nutrObj.Starchy_Roots + nutrObj.Sugar + nutrObj.Vegetable_Oils + nutrObj.Vegetable_Products) * 100, 3) + '%',\n          value: nutrObj.Alcoholic_Beverages / (nutrObj.Alcoholic_Beverages + nutrObj.Animal_fats + nutrObj.Animal_Products + nutrObj.Cereals + nutrObj.Fish_Seafood + nutrObj.Fruits + nutrObj.Milk + nutrObj.Starchy_Roots + nutrObj.Sugar + nutrObj.Vegetable_Oils + nutrObj.Vegetable_Products) * 100,\n          color: '#E38627'\n        }, {\n          title: 'Animal Products, ' + round(nutrObj.Animal_Products / (nutrObj.Alcoholic_Beverages + nutrObj.Animal_fats + nutrObj.Animal_Products + nutrObj.Cereals + nutrObj.Fish_Seafood + nutrObj.Fruits + nutrObj.Milk + nutrObj.Starchy_Roots + nutrObj.Sugar + nutrObj.Vegetable_Oils + nutrObj.Vegetable_Products) * 100, 3) + '%',\n          value: nutrObj.Animal_Products / (nutrObj.Alcoholic_Beverages + nutrObj.Animal_fats + nutrObj.Animal_Products + nutrObj.Cereals + nutrObj.Fish_Seafood + nutrObj.Fruits + nutrObj.Milk + nutrObj.Starchy_Roots + nutrObj.Sugar + nutrObj.Vegetable_Oils + nutrObj.Vegetable_Products) * 100,\n          color: '#6A2135'\n        }, {\n          title: 'Starchy roots, ' + round(nutrObj.Starchy_Roots / (nutrObj.Alcoholic_Beverages + nutrObj.Animal_fats + nutrObj.Animal_Products + nutrObj.Cereals + nutrObj.Fish_Seafood + nutrObj.Fruits + nutrObj.Milk + nutrObj.Starchy_Roots + nutrObj.Sugar + nutrObj.Vegetable_Oils + nutrObj.Vegetable_Products) * 100, 3) + '%',\n          value: nutrObj.Starchy_Roots / (nutrObj.Alcoholic_Beverages + nutrObj.Animal_fats + nutrObj.Animal_Products + nutrObj.Cereals + nutrObj.Fish_Seafood + nutrObj.Fruits + nutrObj.Milk + nutrObj.Starchy_Roots + nutrObj.Sugar + nutrObj.Vegetable_Oils + nutrObj.Vegetable_Products) * 100,\n          color: '#F0FFF0'\n        }, {\n          title: 'Cereals, ' + round(nutrObj.Cereals / (nutrObj.Alcoholic_Beverages + nutrObj.Animal_fats + nutrObj.Animal_Products + nutrObj.Cereals + nutrObj.Fish_Seafood + nutrObj.Fruits + nutrObj.Milk + nutrObj.Starchy_Roots + nutrObj.Sugar + nutrObj.Vegetable_Oils + nutrObj.Vegetable_Products) * 100, 3) + '%',\n          value: nutrObj.Cereals / (nutrObj.Alcoholic_Beverages + nutrObj.Animal_fats + nutrObj.Animal_Products + nutrObj.Cereals + nutrObj.Fish_Seafood + nutrObj.Fruits + nutrObj.Milk + nutrObj.Starchy_Roots + nutrObj.Sugar + nutrObj.Vegetable_Oils + nutrObj.Vegetable_Products) * 100,\n          color: '#FFE4C4'\n        }, {\n          title: 'Fish and Seafood, ' + round(nutrObj.Fish_Seafood / (nutrObj.Alcoholic_Beverages + nutrObj.Animal_fats + nutrObj.Animal_Products + nutrObj.Cereals + nutrObj.Fish_Seafood + nutrObj.Fruits + nutrObj.Milk + nutrObj.Starchy_Roots + nutrObj.Sugar + nutrObj.Vegetable_Oils + nutrObj.Vegetable_Products) * 100, 3) + '%',\n          value: nutrObj.Fish_Seafood / (nutrObj.Alcoholic_Beverages + nutrObj.Animal_fats + nutrObj.Animal_Products + nutrObj.Cereals + nutrObj.Fish_Seafood + nutrObj.Fruits + nutrObj.Milk + nutrObj.Starchy_Roots + nutrObj.Sugar + nutrObj.Vegetable_Oils + nutrObj.Vegetable_Products) * 100,\n          color: '#black'\n        }, {\n          title: 'Fruits, ' + round(nutrObj.Fruits / (nutrObj.Alcoholic_Beverages + nutrObj.Animal_fats + nutrObj.Animal_Products + nutrObj.Cereals + nutrObj.Fish_Seafood + nutrObj.Fruits + nutrObj.Milk + nutrObj.Starchy_Roots + nutrObj.Sugar + nutrObj.Vegetable_Oils + nutrObj.Vegetable_Products) * 100, 3) + '%',\n          value: nutrObj.Fruits / (nutrObj.Alcoholic_Beverages + nutrObj.Animal_fats + nutrObj.Animal_Products + nutrObj.Cereals + nutrObj.Fish_Seafood + nutrObj.Fruits + nutrObj.Milk + nutrObj.Starchy_Roots + nutrObj.Sugar + nutrObj.Vegetable_Oils + nutrObj.Vegetable_Products) * 100,\n          color: '#9932CC'\n        }, {\n          title: 'Milk, ' + round(nutrObj.Milk / (nutrObj.Alcoholic_Beverages + nutrObj.Animal_fats + nutrObj.Animal_Products + nutrObj.Cereals + nutrObj.Fish_Seafood + nutrObj.Fruits + nutrObj.Milk + nutrObj.Starchy_Roots + nutrObj.Sugar + nutrObj.Vegetable_Oils + nutrObj.Vegetable_Products) * 100, 3) + '%',\n          value: nutrObj.Milk / (nutrObj.Alcoholic_Beverages + nutrObj.Animal_fats + nutrObj.Animal_Products + nutrObj.Cereals + nutrObj.Fish_Seafood + nutrObj.Fruits + nutrObj.Milk + nutrObj.Starchy_Roots + nutrObj.Sugar + nutrObj.Vegetable_Oils + nutrObj.Vegetable_Products) * 100,\n          color: '#E9967A'\n        }, {\n          title: 'Animal Fats, ' + round(nutrObj.Animal_fats / (nutrObj.Alcoholic_Beverages + nutrObj.Animal_fats + nutrObj.Animal_Products + nutrObj.Cereals + nutrObj.Fish_Seafood + nutrObj.Fruits + nutrObj.Milk + nutrObj.Starchy_Roots + nutrObj.Sugar + nutrObj.Vegetable_Oils + nutrObj.Vegetable_Products) * 100, 3) + '%',\n          value: nutrObj.Animal_fats / (nutrObj.Alcoholic_Beverages + nutrObj.Animal_fats + nutrObj.Animal_Products + nutrObj.Cereals + nutrObj.Fish_Seafood + nutrObj.Fruits + nutrObj.Milk + nutrObj.Starchy_Roots + nutrObj.Sugar + nutrObj.Vegetable_Oils + nutrObj.Vegetable_Products) * 100,\n          color: '#C13C37'\n        }, {\n          title: 'Sugar, ' + round(nutrObj.Sugar / (nutrObj.Alcoholic_Beverages + nutrObj.Animal_fats + nutrObj.Animal_Products + nutrObj.Cereals + nutrObj.Fish_Seafood + nutrObj.Fruits + nutrObj.Milk + nutrObj.Starchy_Roots + nutrObj.Sugar + nutrObj.Vegetable_Oils + nutrObj.Vegetable_Products) * 100, 3) + '%',\n          value: nutrObj.Sugar / (nutrObj.Alcoholic_Beverages + nutrObj.Animal_fats + nutrObj.Animal_Products + nutrObj.Cereals + nutrObj.Fish_Seafood + nutrObj.Fruits + nutrObj.Milk + nutrObj.Starchy_Roots + nutrObj.Sugar + nutrObj.Vegetable_Oils + nutrObj.Vegetable_Products) * 100,\n          color: '#F0E68C'\n        }, {\n          title: 'Vegetable Oil, ' + round(nutrObj.Vegetable_Oils / (nutrObj.Alcoholic_Beverages + nutrObj.Animal_fats + nutrObj.Animal_Products + nutrObj.Cereals + nutrObj.Fish_Seafood + nutrObj.Fruits + nutrObj.Milk + nutrObj.Starchy_Roots + nutrObj.Sugar + nutrObj.Vegetable_Oils + nutrObj.Vegetable_Products) * 100, 3) + '%',\n          value: nutrObj.Vegetable_Oils / (nutrObj.Alcoholic_Beverages + nutrObj.Animal_fats + nutrObj.Animal_Products + nutrObj.Cereals + nutrObj.Fish_Seafood + nutrObj.Fruits + nutrObj.Milk + nutrObj.Starchy_Roots + nutrObj.Sugar + nutrObj.Vegetable_Oils + nutrObj.Vegetable_Products) * 100,\n          color: '#FFF0F5'\n        }, {\n          title: 'Vegetable Products, ' + round(nutrObj.Vegetable_Products / (nutrObj.Alcoholic_Beverages + nutrObj.Animal_fats + nutrObj.Animal_Products + nutrObj.Cereals + nutrObj.Fish_Seafood + nutrObj.Fruits + nutrObj.Milk + nutrObj.Starchy_Roots + nutrObj.Sugar + nutrObj.Vegetable_Oils + nutrObj.Vegetable_Products) * 100, 3) + '%',\n          value: nutrObj.Vegetable_Products / (nutrObj.Alcoholic_Beverages + nutrObj.Animal_fats + nutrObj.Animal_Products + nutrObj.Cereals + nutrObj.Fish_Seafood + nutrObj.Fruits + nutrObj.Milk + nutrObj.Starchy_Roots + nutrObj.Sugar + nutrObj.Vegetable_Oils + nutrObj.Vegetable_Products) * 100,\n          color: '#FFF0F5'\n        }],\n        viewBoxSize: [200, 200],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }));\n      this.setState({\n        chart: pieChart\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n    fetch(\"http://localhost:8081/foodRecommendation/\" + this.state.selectedCountry, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(nutr => {\n      console.log(\"HERE\");\n      if (!nutr) return;\n      const statsU = nutr.map((nutrObj, i) => /*#__PURE__*/React.createElement(\"div\", {\n        id: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }\n      }, nutrObj.Alcohol, \" % of alcohol\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }\n      }, nutrObj.Vegetable_Oils, \" % of vegetable oil\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }, nutrObj.Sugar, \" % of sugar\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      }, nutrObj.Milk, \" % of milk\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }\n      }, nutrObj.Fruits, \" % of fruits\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      }, nutrObj.Fish_Seafood, \" % of Fish And Seafood\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }, nutrObj.Cereals, \" % of cereals\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      }, nutrObj.Starchy_Roots, \" % of starchy roots\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }\n      }, nutrObj.Animal_Products, \" % of animal products\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }\n      }, nutrObj.Animal_fats, \" % of animal fats\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }\n      }, nutrObj.Vegetable_Oils, \" % of vegetable products\")));\n      this.setState({\n        stats: statsU\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"nutrition\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.selectedCountry,\n      onChange: this.handleCountryChange,\n      className: \"dropdown\",\n      id: \"countryDropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, this.state.countries), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"submit-btn\",\n      id: \"submitBtn\",\n      onClick: this.submitCountryChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chart\",\n      id: \"chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }\n    }, this.state.chart), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"foodStats\",\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, \"On average, people in countries with best death to confirmed cases ratio consume: \"), this.state.stats));\n  }\n\n}","map":{"version":3,"sources":["/Users/daria/Desktop/ALL/Spring_2021/550/Project/CIS550-Final-Project/client/src/components/Nutrition.js"],"names":["React","Component","Chart","MapContainer","CircleMarker","TileLayer","Tooltip","PieChart","round","value","decimals","Number","Math","Nutrition","constructor","props","state","countries","selectedCountry","chart","options","stats","submitCountryChange","bind","handleCountryChange","componentDidMount","fetch","method","then","res","json","err","console","log","countryList","countryDivs","map","countryObj","i","Country","setState","e","tmp","target","nutr","pieChart","nutrObj","x","dataEntry","title","color","fontSize","fill","Alcoholic_Beverages","Animal_fats","Animal_Products","Cereals","Fish_Seafood","Fruits","Milk","Starchy_Roots","Sugar","Vegetable_Oils","Vegetable_Products","statsU","Alcohol","render"],"mappings":"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","sourcesContent":["import React, { Component, Chart } from 'react';\nimport { MapContainer, CircleMarker, TileLayer,Tooltip } from \"react-leaflet\";\nimport { PieChart } from 'react-minimal-pie-chart';\n\n\nfunction round(value, decimals) {\n    return Number(Math.round(value+'e'+decimals)+'e-'+decimals);\n  };\nexport default class Nutrition extends React.Component {\n    constructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcountries: [],\n            selectedCountry: \"\",\n            chart: \"\",\n            options: \"\",\n            stats:\"\"\n\n\t\t};\n\n\t\tthis.submitCountryChange = this.submitCountryChange.bind(this);\n\t    this.handleCountryChange = this.handleCountryChange.bind(this);\n\t\t// this.handleGenreChange = this.handleGenreChange.bind(this);\n\t};\n\n\t/* ---- Q3a (Best Movies) ---- */\n\tcomponentDidMount() {\n        //fetch the weeks options\n        fetch(\"http://localhost:8081/nutrition\",\n\t\t{\n\t\t  method: 'GET' // The type of HTTP request.\n\t\t}).then(res => {\n\t\t  // Convert the response data to a JSON.\n\t\t  return res.json();\n\t\t}, err => {\n\t\t  // Print the error if there is one.\n\t\t  console.log(err);\n\t  }).then(countryList => {\n\t\t  if (!countryList) return;\n\n\t\t  const countryDivs = countryList.map((countryObj, i) =>\n\t\t  <option\n\t\t      key={i}\n\t\t      className=\"countryOption\"\n\t\t\t  value={countryObj.Country}>{countryObj.Country}\n\t\t  </option>\n\t\t  );\n        //   console.log(decadesDivs);\n\t\t//    console.log(decadesList);\n\t\t  this.setState({\n\t\t\tcountries: countryDivs,\n\t\t\tselectedCountry: countryDivs[0].props.value,\n\t\t  });\n\t\t}, err => {\n\t\t  // Print the error if there is one.\n\t\t  console.log(err);\n\t\t});\n\n\t};\n \n    handleCountryChange(e) {\n        let tmp = e.target.value;\n\t\tthis.setState({\n\t\t\tselectedCountry: tmp\n\t\t});\n\n\t};\n\n    async submitCountryChange(e) {\n        fetch(\"http://localhost:8081/byCountry/\"+this.state.selectedCountry,\n        {\n            method: 'GET' // The type of HTTP request.\n        }).then(res =>{\n            return res.json();\n        }, err => {\n            // Print the error if there is one.\n            console.log(err);\n        }).then(nutr => {\n            if (!nutr) return;\n            const pieChart = nutr.map((nutrObj, i) =>\n            \n            <PieChart\n            \n            // labelPosition=\"25%\"\n            \n            label={(x) => { return x.dataEntry.title;}}\n            labelStyle={{ color: \"white\",fontSize:\"2px\",fill:\"white\" }}\n            labelPosition=\"105\"\n            radius = \"25\"\n            background='#FFF0F5'\n            data={[\n                { title: 'Alcoholic Beverages, '+ round(nutrObj.Alcoholic_Beverages/(nutrObj.Alcoholic_Beverages+nutrObj.Animal_fats+ nutrObj.Animal_Products+nutrObj.Cereals+nutrObj.Fish_Seafood+nutrObj.Fruits+nutrObj.Milk+nutrObj.Starchy_Roots+nutrObj.Sugar+nutrObj.Vegetable_Oils+nutrObj.Vegetable_Products)*100,3)+'%', value: nutrObj.Alcoholic_Beverages/(nutrObj.Alcoholic_Beverages+nutrObj.Animal_fats+ nutrObj.Animal_Products+nutrObj.Cereals+nutrObj.Fish_Seafood+nutrObj.Fruits+nutrObj.Milk+nutrObj.Starchy_Roots+nutrObj.Sugar+nutrObj.Vegetable_Oils+nutrObj.Vegetable_Products)*100, color: '#E38627' },\n                { title: 'Animal Products, '+ round(nutrObj.Animal_Products/(nutrObj.Alcoholic_Beverages+nutrObj.Animal_fats+ nutrObj.Animal_Products+nutrObj.Cereals+nutrObj.Fish_Seafood+nutrObj.Fruits+nutrObj.Milk+nutrObj.Starchy_Roots+nutrObj.Sugar+nutrObj.Vegetable_Oils+nutrObj.Vegetable_Products)*100,3)+'%', value: nutrObj.Animal_Products/(nutrObj.Alcoholic_Beverages+nutrObj.Animal_fats+ nutrObj.Animal_Products+nutrObj.Cereals+nutrObj.Fish_Seafood+nutrObj.Fruits+nutrObj.Milk+nutrObj.Starchy_Roots+nutrObj.Sugar+nutrObj.Vegetable_Oils+nutrObj.Vegetable_Products)*100, color: '#6A2135' },\n                { title: 'Starchy roots, '+ round(nutrObj.Starchy_Roots/(nutrObj.Alcoholic_Beverages+nutrObj.Animal_fats+ nutrObj.Animal_Products+nutrObj.Cereals+nutrObj.Fish_Seafood+nutrObj.Fruits+nutrObj.Milk+nutrObj.Starchy_Roots+nutrObj.Sugar+nutrObj.Vegetable_Oils+nutrObj.Vegetable_Products)*100,3)+'%', value: nutrObj.Starchy_Roots/(nutrObj.Alcoholic_Beverages+nutrObj.Animal_fats+ nutrObj.Animal_Products+nutrObj.Cereals+nutrObj.Fish_Seafood+nutrObj.Fruits+nutrObj.Milk+nutrObj.Starchy_Roots+nutrObj.Sugar+nutrObj.Vegetable_Oils+nutrObj.Vegetable_Products)*100, color: '#F0FFF0' },\n                { title: 'Cereals, '+ round(nutrObj.Cereals/(nutrObj.Alcoholic_Beverages+nutrObj.Animal_fats+ nutrObj.Animal_Products+nutrObj.Cereals+nutrObj.Fish_Seafood+nutrObj.Fruits+nutrObj.Milk+nutrObj.Starchy_Roots+nutrObj.Sugar+nutrObj.Vegetable_Oils+nutrObj.Vegetable_Products)*100,3)+'%', value: nutrObj.Cereals/(nutrObj.Alcoholic_Beverages+nutrObj.Animal_fats+ nutrObj.Animal_Products+nutrObj.Cereals+nutrObj.Fish_Seafood+nutrObj.Fruits+nutrObj.Milk+nutrObj.Starchy_Roots+nutrObj.Sugar+nutrObj.Vegetable_Oils+nutrObj.Vegetable_Products)*100, color: '#FFE4C4' },\n                { title: 'Fish and Seafood, '+ round(nutrObj.Fish_Seafood/(nutrObj.Alcoholic_Beverages+nutrObj.Animal_fats+ nutrObj.Animal_Products+nutrObj.Cereals+nutrObj.Fish_Seafood+nutrObj.Fruits+nutrObj.Milk+nutrObj.Starchy_Roots+nutrObj.Sugar+nutrObj.Vegetable_Oils+nutrObj.Vegetable_Products)*100,3)+'%', value: nutrObj.Fish_Seafood/(nutrObj.Alcoholic_Beverages+nutrObj.Animal_fats+ nutrObj.Animal_Products+nutrObj.Cereals+nutrObj.Fish_Seafood+nutrObj.Fruits+nutrObj.Milk+nutrObj.Starchy_Roots+nutrObj.Sugar+nutrObj.Vegetable_Oils+nutrObj.Vegetable_Products)*100, color: '#black' },\n                { title: 'Fruits, '+ round(nutrObj.Fruits/(nutrObj.Alcoholic_Beverages+nutrObj.Animal_fats+ nutrObj.Animal_Products+nutrObj.Cereals+nutrObj.Fish_Seafood+nutrObj.Fruits+nutrObj.Milk+nutrObj.Starchy_Roots+nutrObj.Sugar+nutrObj.Vegetable_Oils+nutrObj.Vegetable_Products)*100,3)+'%', value: nutrObj.Fruits/(nutrObj.Alcoholic_Beverages+nutrObj.Animal_fats+ nutrObj.Animal_Products+nutrObj.Cereals+nutrObj.Fish_Seafood+nutrObj.Fruits+nutrObj.Milk+nutrObj.Starchy_Roots+nutrObj.Sugar+nutrObj.Vegetable_Oils+nutrObj.Vegetable_Products)*100, color: '#9932CC' },\n                { title: 'Milk, '+ round(nutrObj.Milk/(nutrObj.Alcoholic_Beverages+nutrObj.Animal_fats+ nutrObj.Animal_Products+nutrObj.Cereals+nutrObj.Fish_Seafood+nutrObj.Fruits+nutrObj.Milk+nutrObj.Starchy_Roots+nutrObj.Sugar+nutrObj.Vegetable_Oils+nutrObj.Vegetable_Products)*100,3)+'%', value: nutrObj.Milk/(nutrObj.Alcoholic_Beverages+nutrObj.Animal_fats+ nutrObj.Animal_Products+nutrObj.Cereals+nutrObj.Fish_Seafood+nutrObj.Fruits+nutrObj.Milk+nutrObj.Starchy_Roots+nutrObj.Sugar+nutrObj.Vegetable_Oils+nutrObj.Vegetable_Products)*100, color: '#E9967A' },\n                { title: 'Animal Fats, '+ round(nutrObj.Animal_fats/(nutrObj.Alcoholic_Beverages+nutrObj.Animal_fats+ nutrObj.Animal_Products+nutrObj.Cereals+nutrObj.Fish_Seafood+nutrObj.Fruits+nutrObj.Milk+nutrObj.Starchy_Roots+nutrObj.Sugar+nutrObj.Vegetable_Oils+nutrObj.Vegetable_Products)*100,3)+'%', value: nutrObj.Animal_fats/(nutrObj.Alcoholic_Beverages+nutrObj.Animal_fats+ nutrObj.Animal_Products+nutrObj.Cereals+nutrObj.Fish_Seafood+nutrObj.Fruits+nutrObj.Milk+nutrObj.Starchy_Roots+nutrObj.Sugar+nutrObj.Vegetable_Oils+nutrObj.Vegetable_Products)*100, color: '#C13C37' },\n                { title: 'Sugar, '+ round(nutrObj.Sugar/(nutrObj.Alcoholic_Beverages+nutrObj.Animal_fats+ nutrObj.Animal_Products+nutrObj.Cereals+nutrObj.Fish_Seafood+nutrObj.Fruits+nutrObj.Milk+nutrObj.Starchy_Roots+nutrObj.Sugar+nutrObj.Vegetable_Oils+nutrObj.Vegetable_Products)*100,3)+'%', value: nutrObj.Sugar/(nutrObj.Alcoholic_Beverages+nutrObj.Animal_fats+ nutrObj.Animal_Products+nutrObj.Cereals+nutrObj.Fish_Seafood+nutrObj.Fruits+nutrObj.Milk+nutrObj.Starchy_Roots+nutrObj.Sugar+nutrObj.Vegetable_Oils+nutrObj.Vegetable_Products)*100, color: '#F0E68C' },\n                { title: 'Vegetable Oil, '+ round(nutrObj.Vegetable_Oils/(nutrObj.Alcoholic_Beverages+nutrObj.Animal_fats+ nutrObj.Animal_Products+nutrObj.Cereals+nutrObj.Fish_Seafood+nutrObj.Fruits+nutrObj.Milk+nutrObj.Starchy_Roots+nutrObj.Sugar+nutrObj.Vegetable_Oils+nutrObj.Vegetable_Products)*100,3)+'%', value: nutrObj.Vegetable_Oils/(nutrObj.Alcoholic_Beverages+nutrObj.Animal_fats+ nutrObj.Animal_Products+nutrObj.Cereals+nutrObj.Fish_Seafood+nutrObj.Fruits+nutrObj.Milk+nutrObj.Starchy_Roots+nutrObj.Sugar+nutrObj.Vegetable_Oils+nutrObj.Vegetable_Products)*100, color: '#FFF0F5' },\n                { title: 'Vegetable Products, '+ round(nutrObj.Vegetable_Products/(nutrObj.Alcoholic_Beverages+nutrObj.Animal_fats+ nutrObj.Animal_Products+nutrObj.Cereals+nutrObj.Fish_Seafood+nutrObj.Fruits+nutrObj.Milk+nutrObj.Starchy_Roots+nutrObj.Sugar+nutrObj.Vegetable_Oils+nutrObj.Vegetable_Products)*100,3)+'%', value: nutrObj.Vegetable_Products/(nutrObj.Alcoholic_Beverages+nutrObj.Animal_fats+ nutrObj.Animal_Products+nutrObj.Cereals+nutrObj.Fish_Seafood+nutrObj.Fruits+nutrObj.Milk+nutrObj.Starchy_Roots+nutrObj.Sugar+nutrObj.Vegetable_Oils+nutrObj.Vegetable_Products)*100, color: '#FFF0F5' },\n            ]}\n            viewBoxSize={[200, 200]}\n/>\n            \n            );\n            this.setState({\n                chart: pieChart\n              });\n    }, err => {\n        // Print the error if there is one.\n        console.log(err);\n      });\n\n      fetch(\"http://localhost:8081/foodRecommendation/\"+this.state.selectedCountry,\n        {\n            method: 'GET' // The type of HTTP request.\n        }).then(res =>{\n            return res.json();\n        }, err => {\n            // Print the error if there is one.\n            console.log(err);\n        }).then(nutr => {\n            console.log(\"HERE\");\n            if (!nutr) return;\n            const statsU = nutr.map((nutrObj, i) =>\n            <div id = {i}>\n                <p>{nutrObj.Alcohol} % of alcohol</p>\n                <p>{nutrObj.Vegetable_Oils} % of vegetable oil</p>\n                <p>{nutrObj.Sugar} % of sugar</p>\n                <p>{nutrObj.Milk} % of milk</p>\n                <p>{nutrObj.Fruits} % of fruits</p>\n                <p>{nutrObj.Fish_Seafood} % of Fish And Seafood</p>\n                <p>{nutrObj.Cereals} % of cereals</p> \n                <p>{nutrObj.Starchy_Roots} % of starchy roots</p>\n                <p>{nutrObj.Animal_Products} % of animal products</p>\n                <p>{nutrObj.Animal_fats} % of animal fats</p> \n                <p>{nutrObj.Vegetable_Oils} % of vegetable products</p>\n            </div>\n\n            \n            );\n            this.setState({\n                stats: statsU\n              });\n    }, err => {\n        // Print the error if there is one.\n        console.log(err);\n      });\n    \n\t};\n  render() {\n    return (\n    <div id = \"nutrition\">\n         \n        <div className=\"dropdown-container\">\n            <select value={this.state.selectedCountry} onChange={this.handleCountryChange} className=\"dropdown\" id=\"countryDropdown\">\n                {this.state.countries}\n            </select>\n            <button className=\"submit-btn\" id=\"submitBtn\" onClick={this.submitCountryChange}>Submit</button>\n        </div>\n        <div className=\"chart\" id=\"chart\" >\n            {this.state.chart}\n\t\t</div>\n        <div id = \"foodStats\" style={{ color: 'red' }}>\n            <p>On average, people in countries with best death to confirmed cases ratio consume: </p>\n           {this.state.stats}\n        </div>\n    </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}