{"ast":null,"code":"var _jsxFileName = \"/Users/daria/Desktop/ALL/Spring_2021/550/Project/CIS550-Final-Project/client/src/components/CaseSituation.js\";\nimport React from 'react';\nimport PageNavbar from './PageNavbar';\nimport CaseDisplay from './CaseDisplay';\nimport '../style/CaseSituation.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // import  'echarts/lib/chart/line';\n\nexport default class CaseSituation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedCountry: \"\",\n      selectedProvince: \"\",\n      selectedStartTime: \"\",\n      selectedEndTime: \"\",\n      Country: [],\n      Province: [],\n      StartTime: [],\n      EndTime: [],\n      cases: []\n    };\n    this.handleCountryChange = this.handleCountryChange.bind(this);\n    this.handleProvinceChange = this.handleProvinceChange.bind(this);\n    this.handleStartTime = this.handleStartTime.bind(this);\n    this.handleEndTime = this.handleEndTime.bind(this);\n    this.submitDisplay = this.submitDisplay.bind(this); // this.plotgraph = this.plotgraph(this);\n  }\n\n  componentDidMount() {\n    //Get the Country name\n    fetch(\"http://localhost:8081/country\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(CountryList => {\n      if (!CountryList) return;\n      console.log(CountryList);\n      const CountryDivs = CountryList.map((CountryObj, i) => /*#__PURE__*/React.createElement(\"option\", {\n        key: i,\n        className: \"CountryOption\",\n        value: CountryObj.cou,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 4\n        }\n      }, CountryObj.cou)); // Set the state of the keywords list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        Country: CountryDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n    fetch(\"http://localhost:8081/startTime\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(StartTimeList => {\n      if (!StartTimeList) return;\n      console.log(StartTimeList);\n      const StartTimeDivs = StartTimeList.map((StartTimeObj, i) => /*#__PURE__*/React.createElement(\"option\", {\n        key: i,\n        className: \"StartTimeOption\",\n        value: StartTimeObj.StartDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 4\n        }\n      }, StartTimeObj.StartDate)); // Set the state of the keywords list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        StartTime: StartTimeDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  handleGenreChange(e) {\n    console.log(e.target.value);\n    this.setState({\n      selectedGenre: e.target.value\n    });\n  }\n\n  handleCountryChange(e) {\n    console.log(e.target.value);\n    this.setState({\n      selectedCountry: e.target.value\n    }); //Get the Province name\n\n    fetch(\"http://localhost:8081/province/\" + e.target.value, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(ProvinceList => {\n      console.log(ProvinceList);\n      if (!ProvinceList) return;\n      const ProvinceDivs = ProvinceList.map((ProvinceObj, j) => /*#__PURE__*/React.createElement(\"option\", {\n        key: j,\n        className: \"ProvinceOption\",\n        value: ProvinceObj.province_name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 3\n        }\n      }, ProvinceObj.province_name)); // Set the state of the keywords list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        Province: ProvinceDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  handleDecadeChange(e) {\n    console.log(e.target.value);\n    this.setState({\n      selectedDecade: e.target.value\n    });\n  }\n\n  handleProvinceChange(e) {\n    console.log(e.target.value);\n    this.setState({\n      selectedProvince: e.target.value\n    });\n  }\n\n  handleStartTime(e) {\n    console.log(e.target.value);\n    this.setState({\n      selectedStartTime: e.target.value\n    });\n    fetch(\"http://localhost:8081/startTime/\" + e.target.value, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      console.log(res);\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(EndTimeList => {\n      if (!EndTimeList) return;\n      console.log(EndTimeList);\n      const EndTimeDivs = EndTimeList.map((EndTimeObj, i) => /*#__PURE__*/React.createElement(\"option\", {\n        key: i,\n        className: \"EndTimeOption\",\n        value: EndTimeObj.EndDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 4\n        }\n      }, EndTimeObj.EndDate)); // Set the state of the keywords list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        EndTime: EndTimeDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  handleEndTime(e) {\n    console.log(e.target.value);\n    console.log(this.state.selectedCountry);\n    console.log(this.state.selectedProvince);\n    console.log(this.state.selectedStartTime);\n    this.setState({\n      selectedEndTime: e.target.value\n    });\n  }\n\n  submitDisplay() {\n    console.log(this.state.selectedCountry);\n    console.log(this.state.selectedProvince);\n    console.log(this.state.selectedStartTime);\n    console.log(this.state.selectedEndTime);\n    var fixedStart = this.state.selectedStartTime.substring(0, 10);\n    var fixedEnd = this.state.selectedEndTime.substring(0, 10);\n\n    if (this.state.selectedProvince) {\n      fetch(\"http://localhost:8081/display/\" + this.state.selectedCountry + \"/\" + this.state.selectedProvince + \"/\" + fixedStart + \"/\" + fixedEnd, {\n        method: 'GET' // The type of HTTP request.\n\n      }).then(res => {\n        console.log(res);\n        return res.json();\n      }, err => {\n        // Print the error if there is one.\n        console.log(err);\n      }).then(displayList => {\n        if (!displayList) {\n          return;\n        }\n\n        console.log(displayList);\n        const displayDivs = displayList.map((displayObj, i) => /*#__PURE__*/React.createElement(CaseDisplay, {\n          key: i,\n          country: displayObj.Country,\n          province: displayObj.Province,\n          confirmed: displayObj.Confirm,\n          death: displayObj.Death,\n          recovered: displayObj.Recover,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 5\n          }\n        })); // Set the state of the keywords list to the value returned by the HTTP response from the server.\n\n        this.setState({\n          cases: displayDivs\n        });\n      }, err => {\n        // Print the error if there is one.\n        console.log(err);\n      });\n    } else {\n      fetch(\"http://localhost:8081/display/\" + this.state.selectedCountry + \"/\" + null + \"/\" + fixedStart + \"/\" + fixedEnd, {\n        method: 'GET' // The type of HTTP request.\n\n      }).then(res => {\n        console.log(res);\n        return res.json();\n      }, err => {\n        // Print the error if there is one.\n        console.log(err);\n      }).then(displayList => {\n        if (!displayList) {\n          return;\n        }\n\n        console.log(displayList);\n        const displayDivs = displayList.map((displayObj, i) => /*#__PURE__*/React.createElement(CaseDisplay, {\n          key: i,\n          country: displayObj.Country,\n          province: displayObj.Province,\n          confirmed: displayObj.Confirm,\n          death: displayObj.Death,\n          recovered: displayObj.Recover,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 4\n          }\n        })); // Set the state of the keywords list to the value returned by the HTTP response from the server.\n\n        this.setState({\n          cases: displayDivs\n        });\n      }, err => {\n        // Print the error if there is one.\n        console.log(err);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"BestMovies\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      active: \"cases\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container bestmovies-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"jumbotron bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 7\n      }\n    }, \"Cases Situation\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 7\n      }\n    }, \"This part returns the total number of confirmed, recovered and death cases with a given country and province.\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.selectedCountry,\n      onChange: this.handleCountryChange,\n      className: \"dropdown\",\n      id: \"countryDropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 8\n      }\n    }, this.state.Country), /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.selectedProvince,\n      onChange: this.handleProvinceChange,\n      className: \"dropdown\",\n      id: \"provinceDropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 8\n      }\n    }, this.state.Province), /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.selectedStartTime,\n      onChange: this.handleStartTime,\n      className: \"dropdown\",\n      id: \"decadesDropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }\n    }, this.state.StartTime), /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.selectedEndTime,\n      onChange: this.handleEndTime,\n      className: \"dropdown\",\n      id: \"decadesDropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 8\n      }\n    }, this.state.EndTime), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"submit-btn\",\n      id: \"submitBtn\",\n      onClick: this.submitDisplay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 8\n      }\n    }, \"Submit\"))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"jumbotron bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movies-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 48\n      }\n    }, \"Country\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 33\n      }\n    }, \"Province\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 48\n      }\n    }, \"Confirmed\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 33\n      }\n    }, \"Recovered\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 33\n      }\n    }, \"Death\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movies-container\",\n      id: \"results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 8\n      }\n    }, this.state.cases)))));\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/daria/Desktop/ALL/Spring_2021/550/Project/CIS550-Final-Project/client/src/components/CaseSituation.js"],"names":["React","PageNavbar","CaseDisplay","CaseSituation","Component","constructor","props","state","selectedCountry","selectedProvince","selectedStartTime","selectedEndTime","Country","Province","StartTime","EndTime","cases","handleCountryChange","bind","handleProvinceChange","handleStartTime","handleEndTime","submitDisplay","componentDidMount","fetch","method","then","res","json","err","console","log","CountryList","CountryDivs","map","CountryObj","i","cou","setState","StartTimeList","StartTimeDivs","StartTimeObj","StartDate","handleGenreChange","e","target","value","selectedGenre","ProvinceList","ProvinceDivs","ProvinceObj","j","province_name","handleDecadeChange","selectedDecade","EndTimeList","EndTimeDivs","EndTimeObj","EndDate","fixedStart","substring","fixedEnd","displayList","displayDivs","displayObj","Confirm","Death","Recover","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PageNavbar from './PageNavbar';\nimport CaseDisplay from './CaseDisplay';\nimport '../style/CaseSituation.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n// import  'echarts/lib/chart/line';\n\nexport default class CaseSituation extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tselectedCountry: \"\",\n\t\t\tselectedProvince: \"\",\n\t\t\tselectedStartTime: \"\",\n\t\t\tselectedEndTime: \"\",\n\t\t\tCountry: [],\n\t\t\tProvince: [],\n\t\t\tStartTime: [],\n\t\t\tEndTime:[],\n\t\t\tcases:[]\n\n\t\t};\n\n\t\tthis.handleCountryChange = this.handleCountryChange.bind(this);\n\t\tthis.handleProvinceChange = this.handleProvinceChange.bind(this);\n\t\tthis.handleStartTime = this.handleStartTime.bind(this);\n\t\tthis.handleEndTime = this.handleEndTime.bind(this);\n\t\tthis.submitDisplay = this.submitDisplay.bind(this);\n\t\t// this.plotgraph = this.plotgraph(this);\n\n\t};\n\n\tcomponentDidMount() {\n\t\n\n\t//Get the Country name\n\tfetch(\"http://localhost:8081/country\",\n\t{\n\t  method: 'GET' // The type of HTTP request.\n\t}).then(res => {\n\t  // Convert the response data to a JSON.\n\t \n\t  return res.json();\n\t}, err => {\n\t  // Print the error if there is one.\n\t  console.log(err);\n  }).then(CountryList => {\n\t  if (!CountryList) return;\n\t  console.log(CountryList)\n\t  const CountryDivs = CountryList.map((CountryObj, i) =>\n\t  <option\n\t\t  key={i}\n\t\t  className=\"CountryOption\"\n\t\t  value={CountryObj.cou}>{CountryObj.cou}\n\t  </option>\n\t  );\n\n\t  // Set the state of the keywords list to the value returned by the HTTP response from the server.\n\t  this.setState({\n\t\tCountry: CountryDivs,\n\t  });\n\n\t}, err => {\n\t  // Print the error if there is one.\n\t  console.log(err);\n\t});\n\n\n\tfetch(\"http://localhost:8081/startTime\",\n\t{\n\t  method: 'GET' // The type of HTTP request.\n\t}).then(res => {\n\t  // Convert the response data to a JSON.\n\t  return res.json();\n\t}, err => {\n\t  // Print the error if there is one.\n\t  console.log(err);\n  }).then(StartTimeList => {\n\t  if (!StartTimeList) return;\n\t  console.log(StartTimeList)\n\t  const StartTimeDivs = StartTimeList.map((StartTimeObj, i) =>\n\t  <option\n\t\t  key={i}\n\t\t  className=\"StartTimeOption\"\n\t\t  value={StartTimeObj.StartDate}>{StartTimeObj.StartDate}\n\t  </option>\n\t  );\n\n\t  // Set the state of the keywords list to the value returned by the HTTP response from the server.\n\t  this.setState({\n\t\tStartTime: StartTimeDivs,\n\t  });\n\n\t}, err => {\n\t  // Print the error if there is one.\n\t  console.log(err);\n\t});\n\t\n\n\t};\n\n\thandleGenreChange(e) {\n\t\tconsole.log(e.target.value);\n\t\tthis.setState({\n\t\t\tselectedGenre: e.target.value\n\t\t});\n\n\t};\n\n\thandleCountryChange(e) {\n\t\tconsole.log(e.target.value);\n\t\tthis.setState({\n\t\t\tselectedCountry: e.target.value\n\t\t});\n\t\t//Get the Province name\n\t\tfetch(\"http://localhost:8081/province/\" + e.target.value,\n\t\t{\n\t\tmethod: 'GET' // The type of HTTP request.\n\t\t}).then(res => {\n\t\t// Convert the response data to a JSON.\n\t\treturn res.json();\n\t\t}, err => {\n\t\t// Print the error if there is one.\n\t\tconsole.log(err);\n\t\t}).then(ProvinceList => {\n\t\tconsole.log(ProvinceList)\n\t\tif (!ProvinceList) return;\n\n\t\tconst ProvinceDivs = ProvinceList.map((ProvinceObj, j) =>\n\t\t<option\n\t\t\tkey={j}\n\t\t\tclassName=\"ProvinceOption\"\n\t\t\tvalue={ProvinceObj.province_name}>{ProvinceObj.province_name}\n\t\t</option>\n\t\t);\n\n\t\t// Set the state of the keywords list to the value returned by the HTTP response from the server.\n\t\tthis.setState({\n\t\t\tProvince: ProvinceDivs,\n\t\t});\n\n\t\t}, err => {\n\t\t// Print the error if there is one.\n\t\tconsole.log(err);\n\t});\n\t};\n\n\thandleDecadeChange(e) {\n\t\tconsole.log(e.target.value);\n\t\tthis.setState({\n\t\t\tselectedDecade: e.target.value\n\t\t});\n\t\t\n\t};\n\thandleProvinceChange(e) {\n\n\t\tconsole.log(e.target.value);\n\n\t\tthis.setState({\n\t\t\tselectedProvince: e.target.value\n\t\t});\n\t};\n\n\n\n\thandleStartTime(e){\n\t\tconsole.log(e.target.value);\n\t\tthis.setState({\n\t\t\tselectedStartTime: e.target.value\n\t\t});\n\t\tfetch(\"http://localhost:8081/startTime/\"+ e.target.value,\n\t{\n\t  method: 'GET' // The type of HTTP request.\n\t}).then(res => {\n\t  // Convert the response data to a JSON.\n\t  console.log(res)\n\t  return res.json();\n\t}, err => {\n\t  // Print the error if there is one.\n\t  console.log(err);\n  }).then(EndTimeList => {\n\t  if (!EndTimeList) return;\n\t  console.log(EndTimeList)\n\t  const EndTimeDivs = EndTimeList.map((EndTimeObj, i) =>\n\t  <option\n\t\t  key={i}\n\t\t  className=\"EndTimeOption\"\n\t\t  value={EndTimeObj.EndDate}>{EndTimeObj.EndDate}\n\t  </option>\n\t  );\n\n\t  // Set the state of the keywords list to the value returned by the HTTP response from the server.\n\t  this.setState({\n\t\tEndTime: EndTimeDivs,\n\t  });\n\n\t}, err => {\n\t  // Print the error if there is one.\n\t  console.log(err);\n\t});\n\n\n\t}\n\thandleEndTime(e){\n\t\tconsole.log(e.target.value);\n\t\tconsole.log(this.state.selectedCountry);\n\t\tconsole.log(this.state.selectedProvince);\n\t\tconsole.log(this.state.selectedStartTime);\n\t\tthis.setState({\n\t\t\tselectedEndTime: e.target.value\n\t\t});\n\t}\n\n\tsubmitDisplay() {\n\t\tconsole.log(this.state.selectedCountry);\n\t\tconsole.log(this.state.selectedProvince);\n\t\tconsole.log(this.state.selectedStartTime);\n\t\tconsole.log(this.state.selectedEndTime);\n\t\tvar fixedStart = this.state.selectedStartTime.substring(0,10);\n\t\tvar fixedEnd = this.state.selectedEndTime.substring(0,10);\n\t\tif(this.state.selectedProvince){\n\t\t\tfetch(\"http://localhost:8081/display/\"+this.state.selectedCountry+\"/\"+this.state.selectedProvince+\"/\"+fixedStart+\"/\"+fixedEnd,\n\t\t\t{\n\t\t\tmethod: 'GET' // The type of HTTP request.\n\t\t\t}).then(res =>{\n\t\t\tconsole.log(res);\n\t\t\treturn res.json();\n\t\t\t}, err => {\n\t\t\t// Print the error if there is one.\n\t\t\tconsole.log(err);\n\t\t}).then(displayList => {\n\t\t\tif (!displayList){\n\t\t\t\t\n\t\t\t\treturn;}\n\n\t\t\tconsole.log(displayList);\n\t\t\tconst displayDivs = displayList.map((displayObj, i) =>\n\t\t\t\t<CaseDisplay\n\t\t\t\t\tkey={i}\n\t\t\t\t\tcountry={displayObj.Country}\n\t\t\t\t\tprovince={displayObj.Province}\n\t\t\t\t\tconfirmed={displayObj.Confirm}\n\t\t\t\t\tdeath={displayObj.Death}\n\t\t\t\t\trecovered={displayObj.Recover}\n\n\t\t\t\t/>\n\t\t\t);\n\t\t\t\n\t\t\n\t\t\t// Set the state of the keywords list to the value returned by the HTTP response from the server.\n\t\t\tthis.setState({\n\t\t\t\tcases:displayDivs\n\t\t\t});\n\t\t\t}, err => {\n\t\t\t// Print the error if there is one.\n\t\t\tconsole.log(err);\n\t\t\t});\n\t\t}\n\telse{\n\t\tfetch(\"http://localhost:8081/display/\"+this.state.selectedCountry+\"/\"+null+\"/\"+fixedStart+\"/\"+fixedEnd,\n\t\t{\n\t\tmethod: 'GET' // The type of HTTP request.\n\t\t}).then(res =>{\n\t\tconsole.log(res);\n\t\treturn res.json();\n\t\t}, err => {\n\t\t// Print the error if there is one.\n\t\tconsole.log(err);\n\t}).then(displayList => {\n\t\tif (!displayList){\n\t\t\t\n\t\t\treturn;}\n\n\t\tconsole.log(displayList);\n\t\tconst displayDivs = displayList.map((displayObj, i) =>\n\t\t\t<CaseDisplay\n\t\t\t\tkey={i}\n\t\t\t\tcountry={displayObj.Country}\n\t\t\t\tprovince={displayObj.Province}\n\t\t\t\tconfirmed={displayObj.Confirm}\n\t\t\t\tdeath={displayObj.Death}\n\t\t\t\trecovered={displayObj.Recover}\n\n\t\t\t/>\n\t\t);\n\t\t\n\t\n\t\t// Set the state of the keywords list to the value returned by the HTTP response from the server.\n\t\tthis.setState({\n\t\t\tcases:displayDivs\n\t\t});\n\t\t}, err => {\n\t\t// Print the error if there is one.\n\t\tconsole.log(err);\n\t\t});\n\t}\n\n\t};\n\n\t\n\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"BestMovies\">\n\n\t\t\t\t<PageNavbar active=\"cases\" />\n\n\t\t\t\t<div className=\"container bestmovies-container\">\n\t\t\t\t<div class=\"jumbotron bg-dark text-white\">\n\t\t\t\t\t\t<div className=\"h5\">Cases Situation</div>\n\t\t\t\t\t\t<div className=\"h4\">This part returns the total number of confirmed, recovered and death cases with a given country and province.</div>\n\t\t\t\t\t\t<div className=\"dropdown-container\">\n\t\t\t\t\t\t\t<select value={this.state.selectedCountry} onChange={this.handleCountryChange} className=\"dropdown\" id=\"countryDropdown\">\n\t\t\t\t\t\t\t\t{this.state.Country}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t<select value={this.state.selectedProvince} onChange={this.handleProvinceChange} className=\"dropdown\" id=\"provinceDropdown\">\n\t\t\t\t\t\t\t\t{this.state.Province}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t <select value={this.state.selectedStartTime} onChange={this.handleStartTime} className=\"dropdown\" id=\"decadesDropdown\">\n\t\t\t\t\t\t\t\t{this.state.StartTime}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t<select value={this.state.selectedEndTime} onChange={this.handleEndTime} className=\"dropdown\" id=\"decadesDropdown\">\n\t\t\t\t\t\t\t\t{this.state.EndTime}\n\t\t\t\t\t\t\t</select> \n\t\t\t\t\t\t\t<button className=\"submit-btn\" id=\"submitBtn\" onClick={this.submitDisplay}>Submit</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"jumbotron bg-dark text-white\">\n\t\t\t\t\t\t<div className=\"movies-container\">\n\t\t\t\t\t\t\t<div className=\"movie\">\n\t\t\t                    <div className=\"header\"><strong>Country</strong></div>\n\t\t\t\t\t\t\t\t<div className=\"header\"><strong>Province</strong></div>\n\t\t\t                    <div className=\"header\"><strong>Confirmed</strong></div>\n\t\t\t\t\t\t\t\t<div className=\"header\"><strong>Recovered</strong></div>\n\t\t\t\t\t\t\t\t<div className=\"header\"><strong>Death</strong></div>\n\t\t\t        \t\t</div>\n\t\t\t\t\t\t\t<div className=\"movies-container\" id=\"results\">\n\t\t\t\t\t\t\t{this.state.cases}\n\t\t\t\t\t\t\t</div>\n\t\t\t      \t\t</div>\n\t\t\t    \t</div>\n\t\t\t\t\t\n\t\t\t  </div>\n\t\t\t</div>\n\t\t);\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}