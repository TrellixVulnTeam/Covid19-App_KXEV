{"ast":null,"code":"var _jsxFileName = \"/Users/daria/Desktop/ALL/Spring_2021/550/Project/CIS550-Final-Project/client/src/components/Nutrition.js\";\nimport React, { Component } from 'react';\nimport { MapContainer, CircleMarker, TileLayer, Tooltip } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nexport default class Nutrition extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countries: [],\n      selectedCountry: \"\"\n    };\n    this.submitCountryChange = this.submitCountryChange.bind(this);\n    this.handleCountryChange = this.handleCountryChange.bind(this); // this.handleGenreChange = this.handleGenreChange.bind(this);\n  }\n\n  /* ---- Q3a (Best Movies) ---- */\n  componentDidMount() {\n    console.log(\"HELLO\"); //fetch the weeks options\n\n    fetch(\"http://localhost:8081/nutrition\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(countryList => {\n      if (!countryList) return;\n      const countryDivs = countryList.map((countryObj, i) => /*#__PURE__*/React.createElement(\"option\", {\n        key: i,\n        className: \"countryOption\",\n        value: countryObj.Country,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 5\n        }\n      }, countryObj.Country)); //   console.log(decadesDivs);\n      //    console.log(decadesList);\n\n      this.setState({\n        countries: countryDivs,\n        selectedCountry: countryDivs[0].props.value\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  handleWeekChange(e) {\n    console.log(e.target.value);\n    let tmp = e.target.value;\n    let date = tmp.substring(0, 10);\n    console.log(date);\n    this.setState({\n      selectedWeek: date\n    });\n  }\n\n  submitWeekChange(e) {\n    fetch(\"http://localhost:8081/byWeek/\" + this.state.selectedWeek, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(casesList => {\n      if (!casesList) return;\n      const countriesDivs = casesList.map((casesObj, i) => /*#__PURE__*/React.createElement(CircleMarker, {\n        key: i,\n        center: [casesObj.latitude, casesObj.longitude] // radius={20 * Math.log(casesObj.Confirmed / 100000)}\n        ,\n        radius: casesObj.Confirmed / 400000,\n        fillOpacity: 0.5,\n        color: \"red\",\n        stroke: false,\n        name: casesObj.Country,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        direction: \"right\",\n        offset: [-8, -2],\n        opacity: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }, casesObj.Country), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }, \"Confirmed \\n\" + \": \" + casesObj.Confirmed), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }, \"Deaths \\n\" + \": \" + casesObj.Deaths)))); // Set the state of the keywords list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        countries: countriesDivs\n      });\n      console.log(this.state.countries[0]);\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"nutrition\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, \"HELLO\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.selectedCountry,\n      onChange: this.handleCountryChange,\n      className: \"dropdown\",\n      id: \"countryDropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, this.state.countries), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"submit-btn\",\n      id: \"submitBtn\",\n      onClick: this.submitCountryChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"myMap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MapContainer, {\n      style: {\n        height: \"680px\",\n        width: \"100%\",\n        backgroundColor: \"#696969\",\n        color: \"blue\"\n      },\n      zoom: 2,\n      center: [0, 0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      url: \"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movies-container\",\n      id: \"results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, this.state.countries))));\n  }\n\n}","map":{"version":3,"sources":["/Users/daria/Desktop/ALL/Spring_2021/550/Project/CIS550-Final-Project/client/src/components/Nutrition.js"],"names":["React","Component","MapContainer","CircleMarker","TileLayer","Tooltip","Nutrition","constructor","props","state","countries","selectedCountry","submitCountryChange","bind","handleCountryChange","componentDidMount","console","log","fetch","method","then","res","json","err","countryList","countryDivs","map","countryObj","i","Country","setState","value","handleWeekChange","e","target","tmp","date","substring","selectedWeek","submitWeekChange","casesList","countriesDivs","casesObj","latitude","longitude","Confirmed","Deaths","render","height","width","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { MapContainer, CircleMarker, TileLayer,Tooltip } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\n\nexport default class Nutrition extends React.Component {\n    constructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcountries: [],\n            selectedCountry: \"\"\n\t\t};\n\n\t\tthis.submitCountryChange = this.submitCountryChange.bind(this);\n\t    this.handleCountryChange = this.handleCountryChange.bind(this);\n\t\t// this.handleGenreChange = this.handleGenreChange.bind(this);\n\t};\n\n\t/* ---- Q3a (Best Movies) ---- */\n\tcomponentDidMount() {\n        console.log(\"HELLO\");\n        //fetch the weeks options\n        fetch(\"http://localhost:8081/nutrition\",\n\t\t{\n\t\t  method: 'GET' // The type of HTTP request.\n\t\t}).then(res => {\n\t\t  // Convert the response data to a JSON.\n\t\t  return res.json();\n\t\t}, err => {\n\t\t  // Print the error if there is one.\n\t\t  console.log(err);\n\t  }).then(countryList => {\n\t\t  if (!countryList) return;\n\n\t\t  const countryDivs = countryList.map((countryObj, i) =>\n\t\t  <option\n\t\t      key={i}\n\t\t      className=\"countryOption\"\n\t\t\t  value={countryObj.Country}>{countryObj.Country}\n\t\t  </option>\n\t\t  );\n        //   console.log(decadesDivs);\n\t\t//    console.log(decadesList);\n\t\t  this.setState({\n\t\t\tcountries: countryDivs,\n\t\t\tselectedCountry: countryDivs[0].props.value,\n\t\t  });\n\t\t}, err => {\n\t\t  // Print the error if there is one.\n\t\t  console.log(err);\n\t\t});\n\n\t};\n    handleWeekChange(e) {\n\t\tconsole.log(e.target.value);\n        let tmp = e.target.value;\n        let date = tmp.substring(0,10);\n        console.log(date);\n\t\tthis.setState({\n\t\t\tselectedWeek: date\n\t\t});\n\n\t};\n\n    submitWeekChange(e) {\n        fetch(\"http://localhost:8081/byWeek/\"+this.state.selectedWeek,\n        {\n            method: 'GET' // The type of HTTP request.\n        }).then(res =>{\n            return res.json();\n        }, err => {\n            // Print the error if there is one.\n            console.log(err);\n        }).then(casesList => {\n            if (!casesList) return;\n            const countriesDivs = casesList.map((casesObj, i) =>\n        <CircleMarker\n            key={i}\n            center={[casesObj.latitude, casesObj.longitude]}\n            // radius={20 * Math.log(casesObj.Confirmed / 100000)}\n            radius={casesObj.Confirmed / 400000}\n            fillOpacity={0.5}\n            color=\"red\"\n            stroke={false}\n            name={casesObj.Country}\n        >\n            <Tooltip direction=\"right\" offset={[-8, -2]} opacity={1}>\n                <span>{casesObj.Country }</span>\n                <br />\n                <span>{ \"Confirmed \\n\" + \": \" + casesObj.Confirmed}</span>\n                <br />\n                <span>{ \"Deaths \\n\" + \": \" + casesObj.Deaths}</span>\n            </Tooltip>\n        </CircleMarker>\n        );\n\n        // Set the state of the keywords list to the value returned by the HTTP response from the server.\n        this.setState({\n            countries:countriesDivs\n        });\n        console.log(this.state.countries[0]);\n    }, err => {\n        // Print the error if there is one.\n        console.log(err);\n      });\n    \n\t};\n  render() {\n    return (\n        <div id = \"nutrition\">\n            <h1>HELLO</h1>\n        <div className=\"dropdown-container\">\n        <select value={this.state.selectedCountry} onChange={this.handleCountryChange} className=\"dropdown\" id=\"countryDropdown\">\n            {this.state.countries}\n        </select>\n        <button className=\"submit-btn\" id=\"submitBtn\" onClick={this.submitCountryChange}>Submit</button>\n        </div>\n        <div id = \"myMap\">\n        <MapContainer\n          style={{ height: \"680px\", width: \"100%\", backgroundColor: \"#696969\",color:\"blue\" }}\n          zoom={2}\n          center={[0, 0]}>\n              <TileLayer url=\"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\" />\n              <div className=\"movies-container\" id=\"results\">\n\t\t\t          {this.state.countries}\n\t\t\t        </div>\n        </MapContainer>\n      </div>\n      </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}