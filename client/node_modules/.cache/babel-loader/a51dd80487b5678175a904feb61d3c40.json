{"ast":null,"code":"var _jsxFileName = \"/Users/daria/Desktop/ALL/Spring_2021/550/Project/CIS550-Final-Project/client/src/components/Nutrition.js\";\nimport React, { Component, Chart } from 'react';\nimport { MapContainer, CircleMarker, TileLayer, Tooltip } from \"react-leaflet\";\nimport { PieChart } from 'react-minimal-pie-chart';\nexport default class Nutrition extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countries: [],\n      selectedCountry: \"\",\n      chart: \"\",\n      options: \"\"\n    };\n    this.submitCountryChange = this.submitCountryChange.bind(this);\n    this.handleCountryChange = this.handleCountryChange.bind(this); // this.handleGenreChange = this.handleGenreChange.bind(this);\n  }\n\n  /* ---- Q3a (Best Movies) ---- */\n  componentDidMount() {\n    console.log(\"HELLO\"); //fetch the weeks options\n\n    fetch(\"http://localhost:8081/nutrition\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(countryList => {\n      if (!countryList) return;\n      const countryDivs = countryList.map((countryObj, i) => /*#__PURE__*/React.createElement(\"option\", {\n        key: i,\n        className: \"countryOption\",\n        value: countryObj.Country,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 5\n        }\n      }, countryObj.Country)); //   console.log(decadesDivs);\n      //    console.log(decadesList);\n\n      this.setState({\n        countries: countryDivs,\n        selectedCountry: countryDivs[0].props.value\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  handleCountryChange(e) {\n    let tmp = e.target.value;\n    this.setState({\n      selectedCountry: tmp\n    });\n  }\n\n  submitCountryChange(e) {\n    fetch(\"http://localhost:8081/byCountry/\" + this.state.selectedCountry, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(nutr => {\n      if (!nutr) return;\n      const pieChart = nutr.map((nutrObj, i) => /*#__PURE__*/React.createElement(PieChart // labelPosition=\"25%\"\n      , {\n        label: x => {\n          return x.dataEntry.title;\n        },\n        labelStyle: {\n          color: \"white\",\n          fontSize: \"2px\"\n        },\n        radius: \"25\",\n        data: [{\n          title: 'Alcoholic Beverages',\n          value: nutrObj.Alcoholic_Beverages * 100,\n          color: '#E38627'\n        }, {\n          title: 'Animal Fats',\n          value: nutrObj.Animal_fats,\n          color: '#C13C37'\n        }, {\n          title: 'Animal Products',\n          value: nutrObj.Animal_Products,\n          color: '#6A2135'\n        }, {\n          title: 'Cereals',\n          value: nutrObj.Cereals,\n          color: '#grey'\n        }],\n        viewBoxSize: [100, 100],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }));\n      this.setState({\n        chart: pieChart\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"nutrition\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, \"HELLO\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.selectedCountry,\n      onChange: this.handleCountryChange,\n      className: \"dropdown\",\n      id: \"countryDropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, this.state.countries), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"submit-btn\",\n      id: \"submitBtn\",\n      onClick: this.submitCountryChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chart\",\n      id: \"chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, this.state.chart));\n  }\n\n}","map":{"version":3,"sources":["/Users/daria/Desktop/ALL/Spring_2021/550/Project/CIS550-Final-Project/client/src/components/Nutrition.js"],"names":["React","Component","Chart","MapContainer","CircleMarker","TileLayer","Tooltip","PieChart","Nutrition","constructor","props","state","countries","selectedCountry","chart","options","submitCountryChange","bind","handleCountryChange","componentDidMount","console","log","fetch","method","then","res","json","err","countryList","countryDivs","map","countryObj","i","Country","setState","value","e","tmp","target","nutr","pieChart","nutrObj","x","dataEntry","title","color","fontSize","Alcoholic_Beverages","Animal_fats","Animal_Products","Cereals","render"],"mappings":"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","sourcesContent":["import React, { Component, Chart } from 'react';\nimport { MapContainer, CircleMarker, TileLayer,Tooltip } from \"react-leaflet\";\nimport { PieChart } from 'react-minimal-pie-chart';\n\nexport default class Nutrition extends React.Component {\n    constructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcountries: [],\n            selectedCountry: \"\",\n            chart: \"\",\n            options: \"\"\n\t\t};\n\n\t\tthis.submitCountryChange = this.submitCountryChange.bind(this);\n\t    this.handleCountryChange = this.handleCountryChange.bind(this);\n\t\t// this.handleGenreChange = this.handleGenreChange.bind(this);\n\t};\n\n\t/* ---- Q3a (Best Movies) ---- */\n\tcomponentDidMount() {\n        console.log(\"HELLO\");\n        //fetch the weeks options\n        fetch(\"http://localhost:8081/nutrition\",\n\t\t{\n\t\t  method: 'GET' // The type of HTTP request.\n\t\t}).then(res => {\n\t\t  // Convert the response data to a JSON.\n\t\t  return res.json();\n\t\t}, err => {\n\t\t  // Print the error if there is one.\n\t\t  console.log(err);\n\t  }).then(countryList => {\n\t\t  if (!countryList) return;\n\n\t\t  const countryDivs = countryList.map((countryObj, i) =>\n\t\t  <option\n\t\t      key={i}\n\t\t      className=\"countryOption\"\n\t\t\t  value={countryObj.Country}>{countryObj.Country}\n\t\t  </option>\n\t\t  );\n        //   console.log(decadesDivs);\n\t\t//    console.log(decadesList);\n\t\t  this.setState({\n\t\t\tcountries: countryDivs,\n\t\t\tselectedCountry: countryDivs[0].props.value,\n\t\t  });\n\t\t}, err => {\n\t\t  // Print the error if there is one.\n\t\t  console.log(err);\n\t\t});\n\n\t};\n \n    handleCountryChange(e) {\n        let tmp = e.target.value;\n\t\tthis.setState({\n\t\t\tselectedCountry: tmp\n\t\t});\n\n\t};\n\n    submitCountryChange(e) {\n        fetch(\"http://localhost:8081/byCountry/\"+this.state.selectedCountry,\n        {\n            method: 'GET' // The type of HTTP request.\n        }).then(res =>{\n            return res.json();\n        }, err => {\n            // Print the error if there is one.\n            console.log(err);\n        }).then(nutr => {\n            if (!nutr) return;\n            const pieChart = nutr.map((nutrObj, i) =>\n            \n            <PieChart\n            \n            // labelPosition=\"25%\"\n            \n            label={(x) => { return x.dataEntry.title;}}\n            labelStyle={{ color: \"white\",fontSize:\"2px\" }}\n            radius = \"25\"\n            data={[\n                { title: 'Alcoholic Beverages', value: nutrObj.Alcoholic_Beverages*100, color: '#E38627' },\n                { title: 'Animal Fats', value: nutrObj.Animal_fats, color: '#C13C37' },\n                { title: 'Animal Products', value: nutrObj.Animal_Products, color: '#6A2135' },\n                { title: 'Cereals', value: nutrObj.Cereals, color: '#grey' },\n            ]}\n            viewBoxSize={[100, 100]}\n/>\n            \n            );\n\n            this.setState({\n                chart: pieChart\n              });\n    }, err => {\n        // Print the error if there is one.\n        console.log(err);\n      });\n    \n\t};\n  render() {\n    return (\n    <div id = \"nutrition\">\n            <h1>HELLO</h1>\n        <div className=\"dropdown-container\">\n            <select value={this.state.selectedCountry} onChange={this.handleCountryChange} className=\"dropdown\" id=\"countryDropdown\">\n                {this.state.countries}\n            </select>\n            <button className=\"submit-btn\" id=\"submitBtn\" onClick={this.submitCountryChange}>Submit</button>\n        </div>\n        <div className=\"chart\" id=\"chart\">\n        {this.state.chart}\n\t\t</div>\n    </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}